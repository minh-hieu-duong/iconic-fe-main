version: "3.8"
services:
  products.api:
    image: ${DOCKER_REGISTRY-}productsapi
    container_name: products.api
    build:
      context: ../iconic-be
      dockerfile: Products.Api/Dockerfile
    ports:
      - "5000:5000"
      - "5001:5001"
    expose:
      - 5000
    depends_on:
      products.database:
        condition: service_healthy
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - ASPNETCORE_HTTP_PORTS=5000
    volumes:
      - ${APPDATA}/Microsoft/UserSecrets:/home/app/.microsoft/usersecrets:ro
      - ${APPDATA}/ASP.NET/Https:/home/app/.aspnet/https:ro

  products.database:
    image: postgres:latest
    container_name: products.database
    environment:
      - POSTGRES_DB=products
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - 5432:5432
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      retries: 5
      start_period: 5s

  nginx:
    build:
      context: .
    ports:
      - 80:80
    volumes:
      - ../iconic-fe/build:/usr/share/nginx/html
      - ./default.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - products.api
